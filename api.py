import flask
from flask import request, jsonify, render_template
import sqlite3
import json
import os
import config

app = flask.Flask(__name__)
app.config["DEBUG"] = True
app.config['DATABASE_FOLDER'] = config.api_database_folder
app.config['JSONIFY_PRETTYPRINT_REGULAR'] = True
app.config['SEND_FILE_MAX_AGE_DEFAULT'] = 0


def find_databases():
    database_list = []
    databases = os.listdir(app.config['DATABASE_FOLDER'])
    for db in databases:
        db_path = app.config['DATABASE_FOLDER'] + db
        if os.path.isfile(db_path) and db.endswith(".db"):
            database_list.append(db_path)
    return database_list


@app.route('/', methods=['GET', 'POST'])
def home():
    return render_template("index.html")


@app.route('/api-info', methods=['GET'])
def api_info():
    return render_template("api.html")


@app.route('/api', methods=['GET'])
def api():
    source = request.args.get('source')
    results = []
    for db in find_databases():
        conn = sqlite3.connect(db)
        c = conn.cursor()
        c.execute('select * from data where source = ?', (source,))
        result = c.fetchall()

        db_name = db.split(app.config['DATABASE_FOLDER'])
        for item in db_name:
            if not item:
                db_name.remove(item)

        if db == app.config['DATABASE_FOLDER'] + config.malshare_db_name:
            for item in result:
                results.append({'Database': 'malshare.com', 'Source': item[2], 'Ftype': item[1], 'Date': item[3]})

        elif db == app.config['DATABASE_FOLDER'] + config.openbugbounty_db_name:
            for item in result:
                results.append({'Database': 'openbugbounty.org', 'Source': item[0], 'Ftype': item[1], 'Date': item[2]})
        elif db == app.config['DATABASE_FOLDER'] + config.cybercrimetracker_db_name:
            for item in result:
                results.append({'Database': 'http://cybercrime-tracker.net/', 'Source': item[0], 'Ftype': item[1], 'Date': item[2]})
        c.close()
        conn.close()

    return jsonify(results)


@app.route('/bulk-api', methods=['POST', 'GET'])
def bulk_api():
    my_data = json.loads(request.data.decode("utf-8"))
    source_list = my_data['SourceList']
    source_list = ["source = '{}'".format(item) for item in source_list]
    filter_statement = ' OR '.join(source_list)
    sql_statement = 'select * from data where {}'.format(filter_statement)
    results = []
    for db in find_databases():
        conn = sqlite3.connect(db)
        c = conn.cursor()
        c.execute(sql_statement)
        result = c.fetchall()

        db_name = db.split(app.config['DATABASE_FOLDER'])
        for item in db_name:
            if not item:
                db_name.remove(item)

        if db == app.config['DATABASE_FOLDER'] + config.malshare_db_name:
            for item in result:
                results.append({'Database': 'malshare.com', 'Source': item[2], 'Ftype': item[1], 'Date': item[3]})

        elif db == app.config['DATABASE_FOLDER'] + config.openbugbounty_db_name:
            for item in result:
                results.append({'Database': 'openbugbounty.org', 'Source': item[0], 'Ftype': item[1], 'Date': item[2]})
        elif db == app.config['DATABASE_FOLDER'] + config.cybercrimetracker_db_name:
            for item in result:
                results.append({'Database': 'http://cybercrime-tracker.net/', 'Source': item[0], 'Ftype': item[1], 'Date': item[2]})
        c.close()
        conn.close()

    return jsonify(results)


@app.route('/api/latest', methods=['GET'])
def api_latest():
    results = []
    for db in find_databases():
        conn = sqlite3.connect(db)
        c = conn.cursor()
        c.execute("select * from (select * from data where date >= datetime('now', '-1 hours') order by date desc) limit 1000")
        result = c.fetchall()
        db_name = db.split(app.config['DATABASE_FOLDER'])

        for item in db_name:
            if not item:
                db_name.remove(item)

        if db == app.config['DATABASE_FOLDER'] + config.malshare_db_name:
            for item in result:
                results.append({'Database': 'malshare.com', 'Source': item[2], 'Ftype': item[1], 'Date': item[3]})

        elif db == app.config['DATABASE_FOLDER'] + config.openbugbounty_db_name:
            for item in result:
                results.append({'Database': 'openbugbounty.org', 'Source': item[0], 'Ftype': item[1], 'Date': item[2]})
        elif db == app.config['DATABASE_FOLDER'] + config.cybercrimetracker_db_name:
            for item in result:
                results.append({'Database': 'http://cybercrime-tracker.net/', 'Source': item[0], 'Ftype': item[1], 'Date': item[2]})
        c.close()
        conn.close()

    return jsonify(results)


if __name__ == '__main__':
    app.run(host='127.0.0.1', port='8080')
